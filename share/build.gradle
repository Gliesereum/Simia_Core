buildscript {
    ext {
        springBootVersion = '2.2.0.RELEASE'
        springCloudVersion = 'Greenwich.SR3'
        commonsCollectionsVersion = '4.4'
        commonsLangVersion = '3.9'
        commonsIOVersion = '2.6'
        lettuceVersion = '5.2.1.RELEASE'
        modelMapperVersion = '2.3.5'
        jjwtVersion = '0.9.1'
        lombokVersion = '1.18.10'
        swaggerVersion = '2.9.2'
        reflectionsVersion = '0.9.11'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.simia'
version = '0.0.1'
sourceCompatibility = 11

bootJar {
    enabled = false
}

jar {
    enabled = true
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-amqp')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    implementation "org.apache.commons:commons-collections4:${commonsCollectionsVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
    implementation "org.modelmapper:modelmapper:${modelMapperVersion}"
    implementation "io.lettuce:lettuce-core:${lettuceVersion}"
    implementation "commons-io:commons-io:${commonsIOVersion}"
    implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "org.reflections:reflections:${reflectionsVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
