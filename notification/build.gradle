buildscript {
	ext {
		springBootVersion = '2.2.0.RELEASE'
		springCloudVersion = 'Greenwich.SR3'
		commonsCollectionsVersion = '4.4'
		commonsLangVersion = '3.9'
		commonsIOVersion = '2.6'
		modelMapperVersion = '2.3.5'
		jjwtVersion = '0.9.1'
		lombokVersion = '1.18.2'
		swaggerVersion = '2.9.2'
		firebaseAdminVersion = '6.11.0'
		telegramBotVersion = '4.4.0.1'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.simia'
version = '0.1.4'
sourceCompatibility = 11

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-amqp')
	implementation('org.flywaydb:flyway-core')
	implementation "org.modelmapper:modelmapper:${modelMapperVersion}"
	implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
	implementation "org.apache.commons:commons-collections4:${commonsCollectionsVersion}"
	implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
	implementation "commons-io:commons-io:${commonsIOVersion}"
	implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
	implementation "com.google.firebase:firebase-admin:${firebaseAdminVersion}"

	implementation "org.telegram:telegrambots-spring-boot-starter:${telegramBotVersion}"
	
	runtimeOnly('org.postgresql:postgresql')
	
	compileOnly "org.springframework.boot:spring-boot-configuration-processor"

	compileOnly ("org.projectlombok:lombok:${lombokVersion}")
	annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')

	implementation (project(':share')) {
		transitive = false
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
