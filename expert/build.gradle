buildscript {
	ext {
		springBootVersion = '2.1.5.RELEASE'
		springCloudVersion = 'Greenwich.SR1'
		springDataJestVersion = '3.2.2.RELEASE'
		elasticsearchVersion = '6.2.2'
		jaksonJsr310Version = '2.9.7'
		modelMapperVersion = '2.3.0'
		jjwtVersion = '0.9.1'
		commonsCollectionsVersion = '4.2'
		commonsLangVersion = '3.8.1'
		commonsIOVersion = '2.6'
		lombokVersion = '1.18.2'
		apacheCsvVersion = '1.5'
		swaggerVersion = '2.9.2'
		reflectionsVersion = '0.9.11'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.simia'
version = '0.1.4'
sourceCompatibility = 11

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-amqp')
	implementation('org.flywaydb:flyway-core')
	implementation "com.github.vanroy:spring-boot-starter-data-jest:${springDataJestVersion}"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jaksonJsr310Version}"
	implementation "org.modelmapper:modelmapper:${modelMapperVersion}"
	implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
	implementation "org.apache.commons:commons-collections4:${commonsCollectionsVersion}"
	implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
	implementation "commons-io:commons-io:${commonsIOVersion}"
	implementation "org.apache.commons:commons-csv:${apacheCsvVersion}"
	implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
	implementation "org.reflections:reflections:${reflectionsVersion}"
	
	runtimeOnly('org.postgresql:postgresql')
	
	compileOnly "org.springframework.boot:spring-boot-configuration-processor"

	compileOnly ("org.projectlombok:lombok:${lombokVersion}")
	annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')

	implementation (project(':share')) {
		transitive = false
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
